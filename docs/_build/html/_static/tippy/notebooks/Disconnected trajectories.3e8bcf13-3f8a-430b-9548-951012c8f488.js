selector_to_html = {"a[href=\"#optional-second-iterations\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Optional Second Iterations<a class=\"headerlink\" href=\"#optional-second-iterations\" title=\"Permalink to this heading\">\uf0c1</a></h2><p>Sometimes it is desirable to construct a more finegrained clustergraph that uses the terminal states detected in a coarser iteration.</p><p>The rest of the vignette covers how to link the fine and coarse grained iterations of Via. However, it is also possible to simply run a single iteration of Via (as done above) and do so at different levels of granularity by changing too_big_factor, or knn</p>", "a[href=\"#initialize-and-run-via\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Initialize and run VIA<a class=\"headerlink\" href=\"#initialize-and-run-via\" title=\"Permalink to this heading\">\uf0c1</a></h2><p>In this example we provide two group level root cells (T1_M1 and T2_M1). We therefore need to set dataset=\u2019group\u2019</p>", "a[href=\"#overall-trajectory\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Overall Trajectory<a class=\"headerlink\" href=\"#overall-trajectory\" title=\"Permalink to this heading\">\uf0c1</a></h2><p>Draw high-level pseudotime and main trajectories by projecting clustergraph onto umap</p>", "a[href=\"#roots-can-also-be-provided-as-cell-indices\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Roots can also be provided as cell indices<a class=\"headerlink\" href=\"#roots-can-also-be-provided-as-cell-indices\" title=\"Permalink to this heading\">\uf0c1</a></h3><p>If the roots are provided as indices, the dataset parameter should be set to dataset=\u2019\u2019. If the roots are group level labels, then dataset = \u2018group\u2019. This tells via which approach to take for identifying the root.</p>", "a[href=\"#gene-dynamics\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Gene Dynamics<a class=\"headerlink\" href=\"#gene-dynamics\" title=\"Permalink to this heading\">\uf0c1</a></h2><p>Plot the gene expression levels along each lineage for marker genes. Here we use dummy values for the Genes which are just the values of the initial PCs for illustrative purposes</p>", "a[href=\"#lineage-probabilities\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Lineage Probabilities<a class=\"headerlink\" href=\"#lineage-probabilities\" title=\"Permalink to this heading\">\uf0c1</a></h2><p>Plot the lineage probabilities for each lineage (associated with its terminal state, e.g. the leaf nodes)</p>", "a[href=\"#fine-grained-vector-field\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Fine-grained vector field<a class=\"headerlink\" href=\"#fine-grained-vector-field\" title=\"Permalink to this heading\">\uf0c1</a></h2><p>Draw a stream plot that shows the directionality at a higher resolution</p>", "a[href=\"#load-data\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Load data<a class=\"headerlink\" href=\"#load-data\" title=\"Permalink to this heading\">\uf0c1</a></h2>", "a[href=\"#initial-state\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Initial state<a class=\"headerlink\" href=\"#initial-state\" title=\"Permalink to this heading\">\uf0c1</a></h2><h3>Roots can also be provided as cell indices<a class=\"headerlink\" href=\"#roots-can-also-be-provided-as-cell-indices\" title=\"Permalink to this heading\">\uf0c1</a></h3><p>If the roots are provided as indices, the dataset parameter should be set to dataset=\u2019\u2019. If the roots are group level labels, then dataset = \u2018group\u2019. This tells via which approach to take for identifying the root.</p>", "a[href=\"#disconnected-trajectories\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">2. Disconnected Trajectories<a class=\"headerlink\" href=\"#disconnected-trajectories\" title=\"Permalink to this heading\">\uf0c1</a></h1><p>This vignette shows the basic workflow of Via for disconnected trajectories and how to access the different visualizations after running the computations. We use a toydataset with two disconnected components to show different ways to set the root conditions depending on the availability of labels and root level information apriori.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
