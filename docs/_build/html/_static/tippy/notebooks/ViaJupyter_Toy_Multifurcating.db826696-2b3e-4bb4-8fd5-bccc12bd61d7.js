selector_to_html = {"a[href=\"#vector-field\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Vector field<a class=\"headerlink\" href=\"#vector-field\" title=\"Permalink to this heading\">\uf0c1</a></h3><p>The vector field of trajectories is projected onto the embedding</p>", "a[href=\"#fast-visualization-using-underlying-single-cell-via-graphs\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Fast visualization using underlying single-cell VIA-graphs<a class=\"headerlink\" href=\"#fast-visualization-using-underlying-single-cell-via-graphs\" title=\"Permalink to this heading\">\uf0c1</a></h3><p><em><strong>!!! NOTE !!!</strong></em> Remember to assign via_object.embedding to the computed 2d embedding array of size (n_cells x2) when using the various plotting functions</p>", "a[href=\"#via-graph\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">VIA graph<a class=\"headerlink\" href=\"#via-graph\" title=\"Permalink to this heading\">\uf0c1</a></h2><p>To visualize the results of the Trajectory inference in various ways. Via offers various plotting functions.We first show the cluster-graph level trajectory abstraction consisting of two subplots colored by annotated (true_label) composition and by pseudotime</p>", "a[href=\"#parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Parameters<a class=\"headerlink\" href=\"#parameters\" title=\"Permalink to this heading\">\uf0c1</a></h2>", "a[href=\"#via-mds-parameters\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">VIA-mds Parameters<a class=\"headerlink\" href=\"#via-mds-parameters\" title=\"Permalink to this heading\">\uf0c1</a></h3>", "a[href=\"#overall-trajectory\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Overall trajectory<a class=\"headerlink\" href=\"#overall-trajectory\" title=\"Permalink to this heading\">\uf0c1</a></h3><p>Draw overall pseudotime and main trajectories on single cell embedding</p>", "a[href=\"#the-atlas-view\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The Atlas View<a class=\"headerlink\" href=\"#the-atlas-view\" title=\"Permalink to this heading\">\uf0c1</a></h3>", "a[href=\"#lineage-pathways-using-the-atlas-view\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Lineage Pathways - using the Atlas View<a class=\"headerlink\" href=\"#lineage-pathways-using-the-atlas-view\" title=\"Permalink to this heading\">\uf0c1</a></h3>", "a[href=\"#lineage-probabilities\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Lineage probabilities<a class=\"headerlink\" href=\"#lineage-probabilities\" title=\"Permalink to this heading\">\uf0c1</a></h3><p>Plot the lineage probabilities for each lineage (associated with a terminal state)</p>", "a[href=\"#gene-dynamics\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Gene Dynamics<a class=\"headerlink\" href=\"#gene-dynamics\" title=\"Permalink to this heading\">\uf0c1</a></h3><p>Plot the gene expression levels along each lineage for marker genes. Here we use dummy values for the Genes which are just the values of the initial PCs for illustrative purposes</p>", "a[href=\"#using-via-mds\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Using via-mds<a class=\"headerlink\" href=\"#using-via-mds\" title=\"Permalink to this heading\">\uf0c1</a></h2><h3>VIA-mds Parameters<a class=\"headerlink\" href=\"#via-mds-parameters\" title=\"Permalink to this heading\">\uf0c1</a></h3>", "a[href=\"#basic-workflow\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">1. Basic workflow<a class=\"headerlink\" href=\"#basic-workflow\" title=\"Permalink to this heading\">\uf0c1</a></h1><p>This vignette shows the basic workflow of Via and how to access the different visualizations after running the computations. The dataset is a toy multifurcation.\nWe start by importing modules.</p>", "a[href=\"#pre-defined-terminal-states-and-integrated-visualization\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Pre-defined terminal states and Integrated Visualization<a class=\"headerlink\" href=\"#pre-defined-terminal-states-and-integrated-visualization\" title=\"Permalink to this heading\">\uf0c1</a></h3>", "a[href=\"#expected-outputs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Expected Outputs<a class=\"headerlink\" href=\"#expected-outputs\" title=\"Permalink to this heading\">\uf0c1</a></h2><p><em><strong>!! NOTE !!</strong></em>  An atlas embedding is computed in later steps of this tutorial. It is preferable to compute the embedding separately, rather than in the initial run_via() as it then allows for greater control of visualization parameters and to split the total run time into visual and TI.</p>", "a[href=\"#creating-via-atlas-embeddings-and-coloring-scatter-plots\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Creating Via Atlas Embeddings and coloring Scatter Plots<a class=\"headerlink\" href=\"#creating-via-atlas-embeddings-and-coloring-scatter-plots\" title=\"Permalink to this heading\">\uf0c1</a></h2><h3>Fast visualization using underlying single-cell VIA-graphs<a class=\"headerlink\" href=\"#fast-visualization-using-underlying-single-cell-via-graphs\" title=\"Permalink to this heading\">\uf0c1</a></h3><p><em><strong>!!! NOTE !!!</strong></em> Remember to assign via_object.embedding to the computed 2d embedding array of size (n_cells x2) when using the various plotting functions</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
