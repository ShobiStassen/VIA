selector_to_html = {"a[href=\"#pyVIA.plotting_via.plot_differentiation_flow\"]": "<dt class=\"sig sig-object py\" id=\"pyVIA.plotting_via.plot_differentiation_flow\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">pyVIA.plotting_via.</span></span><span class=\"sig-name descname\"><span class=\"pre\">plot_differentiation_flow</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">via_object</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">idx</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dpi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">150</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">marker_lineages</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">[]</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label_node</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">[]</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">do_log_flow</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fontsize</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.9</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">majority_cluster_population_dict</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cmap_sankey</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rainbow'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title_str</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'Differentiation</span> <span class=\"pre\">Flow'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">root_cluster_list</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyVIA/plotting_via.html#plot_differentiation_flow\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>#SANKEY PLOTS\nG is the igraph knn (low K) used for shortest path in high dim space. no idx needed as it\u2019s made on full sample\nknn_hnsw is the knn made in the embedded space used for query to find the nearest point in the downsampled embedding\nthat corresponds to the single cells in the full graph</p><p>:param do_log_flow bool True (default) take the natural log (1+edge flow value)\n:param label_node list of labels for each cell (could be cell type, stage level) length is n_cells\n:param scatter_size: if None, then auto determined based on n_cells\n:param marker_lineages: Default is to use all lineage pathways. other provide a list of lineage number (terminal cluster number).\n:type alpha_factor: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">float</span></code>\n:param alpha_factor: float transparency\n:type root_cluster_list: <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Optional</span></code>[<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">list</span></code>]\n:param root_cluster_list: list of roots by cluster number e.g. [5] means a good root is cluster number 5\n:return: fig, axs</p></dd>", "a[href=\"#pyvia-plotting-via-plot-differentiation-flow\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">pyVIA.plotting_via.plot_differentiation_flow<a class=\"headerlink\" href=\"#pyvia-plotting-via-plot-differentiation-flow\" title=\"Permalink to this heading\">\uf0c1</a></h1>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
